{"version":3,"sources":["card/CountdownCard.js","matchup/Matchup.js","App.js","reportWebVitals.js","index.js"],"names":["CountdownCard","event","displayFormat","dataFormat","startDate","moment","utc","start_time","endDate","end_time","totalSecondsLeft","duration","diff","asSeconds","secondsLeft","Math","floor","minsLeft","hoursLeft","daysLeft","totalSecondsToEnd","secondsToEnd","minsToEnd","hoursToEnd","daysToEnd","inProgress","padZero","number","padStart","showEnd","className","alt","icon_src","src","event_name","local","format","Comp","comp","unitDistance","onClick","style","minHeight","_","chain","orderBy","unit","map","value","Matchup","suggestionRef","useRef","selectionRef","useState","showLose","setShowLose","matchup","setMatchup","setUnitDistance","blacklist","setBlacklist","sortedMatchup","setSortedMatchup","bestComp","setBestComp","winningMatches","setWinningMatches","losingMatches","setLosingMatches","defCharOptions","setDefCharOptions","attackOptions","setAttackOptions","selectedDefender","setSelectedDefender","useEffect","fetch","then","r","json","sorted","uniq","key","uuidv4","winner","loser","length","result","countBy","entries","maxBy","last","split","flatten","sort","filter","includes","winType","intersection","winningMatch","similarity","chunk","losingMatch","onDefClick","name","onClickShowLose","scrollTo","target","current","scrollIntoView","ref","defender","height","width","bind","comps","App","eventData","setEventData","timer","setTimer","matchupMode","setMatchupMode","setInterval","window","location","search","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.656b8a8d.chunk.js","sourcesContent":["import moment from 'moment';\r\nimport { Fragment } from 'react';\r\n\r\nconst CountdownCard = ({ event }) => {\r\n    const displayFormat = 'YYYY MMM DD hh:mm:ss a';\r\n    const dataFormat = 'YYYY/MM/DD hh:mm:ss';\r\n\r\n    const startDate = moment.utc(event.start_time, dataFormat)\r\n    const endDate = moment.utc(event.end_time, dataFormat)\r\n    const totalSecondsLeft = moment.duration(startDate.diff(moment())).asSeconds();\r\n    const secondsLeft = Math.floor(totalSecondsLeft) % 60;\r\n    const minsLeft = Math.floor(totalSecondsLeft / 60 % 60);\r\n    const hoursLeft = Math.floor(totalSecondsLeft / 60 / 60 % 24);\r\n    const daysLeft = Math.floor(totalSecondsLeft / 60 / 60 / 24);\r\n\r\n    const totalSecondsToEnd = moment.duration(endDate.diff(moment())).asSeconds();\r\n    const secondsToEnd = Math.floor(totalSecondsToEnd) % 60;\r\n    const minsToEnd = Math.floor(totalSecondsToEnd / 60 % 60);\r\n    const hoursToEnd = Math.floor(totalSecondsToEnd / 60 / 60 % 24);\r\n    const daysToEnd = Math.floor(totalSecondsToEnd / 60 / 60 / 24);\r\n\r\n    const inProgress = totalSecondsLeft <= 0;\r\n    const padZero = (number) => `${number}`.padStart(2, '0');\r\n    const showEnd = !(event.start_time === event.end_time);\r\n\r\n    return (\r\n        <div className={`countdown-card ${(inProgress) ? 'active' : ''}`}>\r\n            <div className='icon'>\r\n                <img alt={event.icon_src} src={`icons/${event.icon_src}.png`} />\r\n            </div>\r\n            <div className='info'>\r\n                <div className='title'>{event.event_name}</div>\r\n                <div className='countdown'>\r\n                    {(inProgress) ?\r\n                        <div className='subtitle'>--In progress--</div>\r\n                        :\r\n                        <Fragment><div className='subtitle'>Starts in</div><div>{`${daysLeft} days ${padZero(hoursLeft)}:${padZero(minsLeft)}:${padZero(secondsLeft)}`}</div></Fragment>\r\n                    }\r\n                    {showEnd && <Fragment><div className='subtitle'>Ends in</div><div>{`${daysToEnd} days ${padZero(hoursToEnd)}:${padZero(minsToEnd)}:${padZero(secondsToEnd)}`}</div></Fragment>}\r\n                </div>\r\n                <div className='date'>\r\n                    <div >Start Date: {startDate.local().format(displayFormat)}</div>\r\n                    {showEnd && <div >End Date: {endDate.local().format(displayFormat)}</div>}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CountdownCard;","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../App.css';\r\nimport { Fragment } from 'react';\r\n\r\nconst Comp = ({ comp, unitDistance, onClick }) => {\r\n  return <div style={{ minHeight: '68px' }}>\r\n    {_.chain(comp)\r\n      .orderBy(unit => unitDistance[unit], \"desc\")\r\n      .map(unit => (onClick) ?\r\n        <img onClick={() => onClick(unit)} key={`${unit}-img`} alt={unit} src={`icons/units/${unit}.png`} />\r\n        :\r\n        <img key={`${unit}-img`} alt={unit} src={`icons/units/${unit}.png`} />\r\n      )\r\n      .value()}\r\n  </div>\r\n}\r\n\r\nconst Matchup = () => {\r\n  const suggestionRef = useRef();\r\n  const selectionRef = useRef();\r\n\r\n  const [showLose, setShowLose] = useState(false);\r\n  const [matchup, setMatchup] = useState([]);\r\n  const [unitDistance, setUnitDistance] = useState({});\r\n  const [blacklist, setBlacklist] = useState({});\r\n\r\n  const [sortedMatchup, setSortedMatchup] = useState([]);\r\n\r\n  const [bestComp, setBestComp] = useState([])\r\n\r\n  const [winningMatches, setWinningMatches] = useState([]);\r\n  const [losingMatches, setLosingMatches] = useState([]);\r\n  const [defCharOptions, setDefCharOptions] = useState([]);\r\n  const [attackOptions, setAttackOptions] = useState([]);\r\n\r\n  const [selectedDefender, setSelectedDefender] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('data/matchup.json')\r\n      .then((r) => r.json())\r\n      .then((json) => setMatchup(json));\r\n\r\n    fetch('data/unit_distance.json')\r\n      .then((r) => r.json())\r\n      .then((json) => setUnitDistance(json));\r\n\r\n    fetch('data/blacklist.json')\r\n      .then((r) => r.json())\r\n      .then((json) => setBlacklist(json));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const sorted = _.chain(matchup)\r\n      .uniq()\r\n      .map(matchup => {\r\n        const key = uuidv4();\r\n        return {\r\n          ...matchup,\r\n          winner: _.orderBy(matchup['winner'], unit => unitDistance[unit], \"desc\"),\r\n          loser: _.orderBy(matchup['loser'], unit => unitDistance[unit], \"desc\"),\r\n          key,\r\n        };\r\n      })\r\n      .value();\r\n\r\n    setSortedMatchup(sorted)\r\n  }, [matchup, unitDistance]);\r\n\r\n  useEffect(() => {\r\n    if (sortedMatchup.length === 0) return;\r\n\r\n    const result = _.chain(sortedMatchup)\r\n      .countBy(matchup => matchup.winner)\r\n      .entries()\r\n      .maxBy(_.last)\r\n      .value();\r\n    setBestComp(result[0].split(','));\r\n\r\n    setDefCharOptions(_.chain(sortedMatchup).map(matchup => matchup.loser).flatten().uniq().sort().value())\r\n    setAttackOptions(_.chain(sortedMatchup).map(matchup => matchup.winner).flatten().uniq().filter(unit => !_.includes(blacklist, unit)).value())\r\n\r\n  }, [sortedMatchup, blacklist]);\r\n\r\n  useEffect(() => {\r\n    const result = _.chain(sortedMatchup)\r\n      .filter(matchup => matchup.winType !== 'timeout')\r\n      .filter(matchup => _.intersection(matchup.loser, selectedDefender).length >= 1)\r\n      .filter(matchup => _.intersection(matchup.winner, blacklist).length <= 0)\r\n      .map(winningMatch => {\r\n        const similarity = _.intersection(winningMatch.loser, selectedDefender).length;\r\n        return { ...winningMatch, similarity };\r\n      })\r\n      .uniq()\r\n      .orderBy(matchup => matchup.similarity, \"desc\")\r\n      .chunk(4)\r\n      .value();\r\n    if (result.length > 0) { setWinningMatches(result[0]) } else { setWinningMatches([]) };\r\n  }, [selectedDefender, sortedMatchup, blacklist]);\r\n\r\n  useEffect(() => {\r\n    const result = _.chain(sortedMatchup)\r\n      .filter(matchup => _.intersection(matchup.winner, selectedDefender).length >= 2)\r\n      .map(losingMatch => {\r\n        const similarity = _.intersection(losingMatch.winner, selectedDefender).length;\r\n        return { ...losingMatch, similarity };\r\n      })\r\n      .uniq()\r\n      .orderBy(matchup => matchup.similarity, \"desc\")\r\n      .chunk(4)\r\n      .value();\r\n    if (result.length > 0) { setLosingMatches(result[0]) } else { setLosingMatches([]) };\r\n  }, [selectedDefender, sortedMatchup]);\r\n\r\n  const onDefClick = (name) => {\r\n    if (selectedDefender.length < 5) {\r\n      setSelectedDefender(_.chain([...selectedDefender, name]).uniq().value())\r\n    }\r\n  }\r\n\r\n  const onClearClick = () => {\r\n    setSelectedDefender([])\r\n  }\r\n\r\n  const removeUnitHandler = (unit) => {\r\n    setSelectedDefender(selectedDefender.filter(defender => defender !== unit))\r\n  }\r\n\r\n  const onClickShowLose = () => {\r\n    setShowLose(!showLose);\r\n  }\r\n\r\n  const scrollTo = (target) => {\r\n    target.current.scrollIntoView()\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div ref={selectionRef} className='selection-container'>\r\n\r\n        <div>\r\n          <div>Selected Defenders</div>\r\n          <Comp onClick={removeUnitHandler} comp={selectedDefender} unitDistance={unitDistance} />\r\n          <div>\r\n            <button style={{ height: \"50px\", width: '50%' }} onClick={onClearClick}>Clear team</button>\r\n            <button style={{ height: \"50px\", width: '50%' }} onClick={() => scrollTo(suggestionRef)}>Jump to teams</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div>Select</div>\r\n          <div className=\"defButtons\">\r\n            {defCharOptions.map(name => (\r\n              <div key={`${name}-icon`} className=\"button-container\" onClick={onDefClick.bind(this, name)} >\r\n                <img alt={name} src={`icons/units/${name}.png`} />{name}\r\n              </div>))}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div>Available Units</div>\r\n          <Comp comp={attackOptions} unitDistance={unitDistance} />\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div ref={suggestionRef} className=\"suggestion-container\">\r\n        <button style={{ height: \"50px\" }} onClick={() => scrollTo(selectionRef)}>Back to top</button>\r\n        {(!showLose) ?\r\n          <Fragment>\r\n            <h4 onClick={onClickShowLose}>Winning matchups</h4>\r\n            <div className=\"wins\">\r\n              {winningMatches.map(comps => (\r\n                <div key={comps.key} className=\"comp-container\">\r\n                  <div>\r\n                    <div>Winner</div>\r\n                    <Comp comp={comps.winner} unitDistance={unitDistance} />\r\n                  </div>\r\n                  <div>\r\n                    <div>Loser(Same Units: {comps.similarity})</div>\r\n                    <Comp comp={comps.loser} unitDistance={unitDistance} />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n          :\r\n          <Fragment>\r\n            <h4 onClick={onClickShowLose}>Losing matchups</h4>\r\n            <div className=\"loses\">\r\n              {losingMatches.map(comps => (\r\n                <div key={comps.key} className=\"comp-container\">\r\n                  <div>\r\n                    <div>Winner(Same Units: {comps.similarity})</div>\r\n                    <Comp comp={comps.winner} unitDistance={unitDistance} />\r\n                  </div>\r\n                  <div>\r\n                    <div>Loser</div>\r\n                    <Comp comp={comps.loser} unitDistance={unitDistance} />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        }\r\n\r\n        {winningMatches.length === 0 &&\r\n          <div className=\"comp-container\">\r\n            <div>Best Performing Comp</div>\r\n            <Comp comp={bestComp} unitDistance={unitDistance} />\r\n          </div>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Matchup;\r\n","import moment from 'moment';\r\nimport React, { useState, useEffect } from 'react';\r\nimport CountdownCard from './card/CountdownCard';\r\nimport Matchup from './matchup/Matchup';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [eventData, setEventData] = useState([]);\r\n  const dataFormat = 'YYYY/MM/DD hh:mm:ss';\r\n  const [timer, setTimer] = useState(0);\r\n  const [matchupMode, setMatchupMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch('data/data.json')\r\n      .then((r) => r.json())\r\n      .then((json) => setEventData(json));\r\n\r\n    setInterval(() => {\r\n      setTimer(1);\r\n    }, 1000);\r\n    setMatchupMode(window.location.search === '?matchup');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimer(0);\r\n  }, [timer]);\r\n\r\n  const content = (matchupMode) ? <Matchup /> : (\r\n    <div className='card-container'>\r\n      {\r\n        eventData.map((event) => {\r\n          const endDate = moment.utc(event.end_time, dataFormat)\r\n          return (endDate.diff(moment()) > 0) ? <CountdownCard key={event.event_name} event={event} /> : null;\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}